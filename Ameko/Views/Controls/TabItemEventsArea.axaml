<!-- SPDX-License-Identifier: GPL-3.0-only -->

<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             d:DesignWidth="800"
             d:DesignHeight="450"
             
             xmlns:converters="clr-namespace:Ameko.Converters"
             xmlns:i18n="clr-namespace:Ameko.I18N"
             xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:vm="clr-namespace:Ameko.ViewModels.Controls"

             x:Class="Ameko.Views.Controls.TabItemEventsArea"
             x:DataType="vm:TabItemViewModel">
	<UserControl.Resources>
		<converters:GridPaddingConverter x:Key="PaddingConverter" />
	</UserControl.Resources>
    <DataGrid Name="EventsGrid"
              IsReadOnly="True"
              CanUserResizeColumns="True"
              CanUserReorderColumns="False"
              SelectionMode="Extended"
              VerticalScrollBarVisibility="Auto"
              ItemsSource="{Binding Workspace.Document.EventManager.Events}"
              SelectedItem="{Binding Workspace.SelectionManager.ActiveEvent, Mode=OneWay}"
              SelectionChanged="DataGrid_OnSelectionChanged">
        <DataGrid.Columns>
            <DataGridTextColumn Header="ID"
                                Binding="{Binding Id}"
                                IsVisible="False"
                                CanUserResize="False" />
            <DataGridTextColumn Header="#"
                                Binding="{Binding Index}"
                                CanUserResize="False" />
            <DataGridTextColumn Header="{x:Static i18n:Resources.EventsGrid_Header_Start}"
                                Binding="{Binding Start.UpdatableText}"
                                CanUserResize="False" />
            <DataGridTextColumn Header="{x:Static i18n:Resources.EventsGrid_Header_End}"
                                Binding="{Binding End.UpdatableText}"
                                CanUserResize="False" />
            <DataGridTextColumn Header="{x:Static i18n:Resources.EventsGrid_Header_Cps}"
                                Binding="{Binding Cps}"
                                CanUserResize="False">
                
            </DataGridTextColumn>
            <DataGridTextColumn Header="{x:Static i18n:Resources.EventsGrid_Header_Style}"
                                Binding="{Binding Style}" />
			<DataGridTextColumn Header="{x:Static i18n:Resources.EventsGrid_Header_Actor}"
			                    Binding="{Binding Actor}"
			                    IsVisible="{Binding Workspace.DisplayActorsColumn}" />
			<DataGridTextColumn Header="{x:Static i18n:Resources.EventsGrid_Header_Effect}"
			                    Binding="{Binding Effect}"
			                    IsVisible="{Binding Workspace.DisplayEffectsColumn}" />
			<DataGridTextColumn Header="{x:Static i18n:Resources.EventsGrid_Header_Content}"
			                    Binding="{Binding Text}" />
        </DataGrid.Columns>
	    <DataGrid.ContextMenu>
		    <ContextMenu>
			    <MenuItem Header="{x:Static i18n:Resources.EventsGrid_Menu_Duplicate}"
			              Icon="{icons:MaterialIconExt Kind=ContentDuplicate}"
			              Command="{Binding DuplicateEventsCommand}" />
			    <MenuItem Header="{x:Static i18n:Resources.EventsGrid_Menu_MergeLines}"
			              Icon="{icons:MaterialIconExt Kind=CallMerge}"
			              Command="{Binding MergeEventsCommand}" />
			    <MenuItem Header="{x:Static i18n:Resources.EventsGrid_Menu_SplitLine}"
			              Icon="{icons:MaterialIconExt Kind=CallSplit}"
			              Command="{Binding SplitEventsCommand}" />
			    <Separator />
			    <MenuItem Header="{x:Static i18n:Resources.EventsGrid_Menu_InsertBefore}"
			              Icon="{icons:MaterialIconExt Kind=ArrowCollapseUp}"
			              Command="{Binding InsertEventBeforeCommand}" />
			    <MenuItem Header="{x:Static i18n:Resources.EventsGrid_Menu_InsertAfter}"
			              Icon="{icons:MaterialIconExt Kind=ArrowCollapseDown}"
			              Command="{Binding InsertEventAfterCommand}" />
			    <Separator />
			    <MenuItem Header="{x:Static i18n:Resources.EventsGrid_Menu_Copy}"
			              Icon="{icons:MaterialIconExt Kind=ContentCopy}"
			              Command="{Binding CopyEventsCommand}" />
			    <MenuItem Header="{x:Static i18n:Resources.EventsGrid_Menu_Cut}"
			              Icon="{icons:MaterialIconExt Kind=ContentCut}"
			              Command="{Binding CutEventsCommand}" />
			    <MenuItem Header="{x:Static i18n:Resources.EventsGrid_Menu_Paste}"
			              Icon="{icons:MaterialIconExt Kind=ContentPaste}"
			              Command="{Binding PasteEventsCommand}" />
			    <MenuItem Header="{x:Static i18n:Resources.EventsGrid_Menu_PasteOver}"
			              Icon="{icons:MaterialIconExt Kind=ClipboardEditOutline}" />
			    <Separator />
			    <MenuItem Header="{x:Static i18n:Resources.EventsGrid_Menu_Delete}"
			              Icon="{icons:MaterialIconExt Kind=TrashCanOutline}"
			              Command="{Binding DeleteEventsCommand}" />
		    </ContextMenu>
	    </DataGrid.ContextMenu>
	    <DataGrid.Styles>
		    <Style Selector="DataGridRow">
			    <Setter Property="Background" Value="Transparent" />
			    <Setter Property="Padding" Value="0" />
		    </Style>
		    <Style Selector="TextBlock">
			    <Setter Property="Padding" Value="{Binding $parent[UserControl].((vm:TabItemViewModel)DataContext).Configuration.GridPadding,
														   Converter={StaticResource PaddingConverter},
														   FallbackValue=.}" />
			    <Setter Property="Margin" Value="0 0" />
		    </Style>
	    </DataGrid.Styles>
    </DataGrid>
              
</UserControl>
