<!-- SPDX-License-Identifier: GPL-3.0-only -->

<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        d:DesignWidth="375"
        d:DesignHeight="325"

        xmlns:converters="clr-namespace:Ameko.Converters"
        xmlns:dm="clr-namespace:Ameko.DataModels"
        xmlns:i18n="clr-namespace:Ameko.I18N"
        xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        xmlns:vm="clr-namespace:Ameko.ViewModels.Dialogs"

        x:Class="Ameko.Views.Dialogs.ShiftTimesDialog"
        x:DataType="vm:ShiftTimesDialogViewModel"

        Width="375"
        Topmost="True"
        CanResize="False"
        SizeToContent="Height"
        ShowInTaskbar="False"
        WindowStartupLocation="CenterOwner"
        Icon="/Assets/Ameko-Simplified-BG-64.ico"
        Title="{x:Static i18n:ShiftTimes.ShiftTimes_WindowTitle}">
    <Window.Resources>
        <converters:EnumConverter x:Key="EnumConverter" />
        <converters:HccBorderConverter x:Key="BorderConverter" />
    </Window.Resources>
    
    <StackPanel Margin="5 0 5 5">
        <HeaderedContentControl Header="{x:Static i18n:ShiftTimes.ShiftTimes_Header_ShiftBy}">
            <Grid ColumnDefinitions="Auto, *, Auto, Auto"
                  RowDefinitions="Auto, Auto, Auto"
                  RowSpacing="2"
                  ColumnSpacing="5">
                <RadioButton Grid.Column="0"
                             Grid.Row="0"
                             VerticalAlignment="Center"
                             GroupName="ShiftBy"
                             Content="{x:Static i18n:ShiftTimes.ShiftTimes_RB_Time}"
                             IsChecked="{Binding ShiftType,
                                                 Converter={StaticResource EnumConverter},
                                                 ConverterParameter={x:Static dm:ShiftTimesType.Time}}" />
                <RadioButton Grid.Column="0"
                             Grid.Row="1"
                             VerticalAlignment="Center"
                             GroupName="ShiftBy"
                             Content="{x:Static i18n:ShiftTimes.ShiftTimes_RB_Frames}"
                             IsChecked="{Binding ShiftType,
                                                 Converter={StaticResource EnumConverter},
                                                 ConverterParameter={x:Static dm:ShiftTimesType.Frames}}"
                             IsEnabled="{Binding CanShiftFrames}" />
                <RadioButton Grid.Column="0"
                             Grid.Row="2"
                             VerticalAlignment="Center"
                             GroupName="ShiftBy"
                             Content="{x:Static i18n:ShiftTimes.ShiftTimes_RB_Milliseconds}"
                             IsChecked="{Binding ShiftType,
                                                 Converter={StaticResource EnumConverter},
                                                 ConverterParameter={x:Static dm:ShiftTimesType.Milliseconds}}" />
                <TextBox Name="TimeBox"
                         Grid.Column="1"
                         Grid.Row="0"
                         AcceptsReturn="False"
                         AcceptsTab="False"
                         Text="{Binding ShiftTime.UpdatableText}"
                         IsEnabled="{Binding ShiftType,
                                             Converter={StaticResource EnumConverter},
                                             ConverterParameter={x:Static dm:ShiftTimesType.Time}}" />
                <TextBox Name="FrameBox"
                         Grid.Column="1"
                         Grid.Row="1"
                         AcceptsReturn="False"
                         AcceptsTab="False"
                         Text="{Binding ShiftFrames}"
                         IsEnabled="{Binding ShiftType,
                                             Converter={StaticResource EnumConverter},
                                             ConverterParameter={x:Static dm:ShiftTimesType.Frames}}" />
                <NumericUpDown Name="MillisBox"
                               Grid.Column="1"
                               Grid.Row="2"
                               Minimum="0"
                               ShowButtonSpinner="False"
                               Padding="0"
                               Value="{Binding ShiftMillis}"
                               IsEnabled="{Binding ShiftType,
                                                   Converter={StaticResource EnumConverter},
                                                   ConverterParameter={x:Static dm:ShiftTimesType.Milliseconds}}" />
                <RadioButton Grid.Column="2"
                             Grid.Row="0"
                             VerticalAlignment="Center"
                             GroupName="ShiftDirection"
                             Content="{x:Static i18n:ShiftTimes.ShiftTimes_RB_TowardEnd}"
                             IsChecked="{Binding ShiftDirection,
                                                 Converter={StaticResource EnumConverter},
                                                 ConverterParameter={x:Static dm:ShiftTimesDirection.Forward}}" />
                <RadioButton Grid.Column="2"
                             Grid.Row="1"
                             VerticalAlignment="Center"
                             GroupName="ShiftDirection"
                             Content="{x:Static i18n:ShiftTimes.ShiftTimes_RB_TowardStart}"
                             IsChecked="{Binding ShiftDirection,
                                                 Converter={StaticResource EnumConverter},
                                                 ConverterParameter={x:Static dm:ShiftTimesDirection.Backward}}" />
                <icons:MaterialIcon Grid.Column="3"
                                    Grid.Row="0"
                                    Kind="ArrowExpandRight" />
                <icons:MaterialIcon Grid.Column="3"
                                    Grid.Row="1"
                                    Kind="ArrowExpandLeft" />
            </Grid>
        </HeaderedContentControl>
        <HeaderedContentControl Header="{x:Static i18n:ShiftTimes.ShiftTimes_Header_Affect}">
            <UniformGrid Columns="2"
                         Rows="1"
                         ColumnSpacing="5">
                <RadioButton GroupName="Affect"
                             Content="{x:Static i18n:ShiftTimes.ShiftTimes_RB_AllEvents}"
                             IsChecked="{Binding ShiftFilter,
                                                 Converter={StaticResource EnumConverter},
                                                 ConverterParameter={x:Static dm:ShiftTimesFilter.AllEvents}}" />
                <RadioButton GroupName="Affect"
                             Content="{x:Static i18n:ShiftTimes.ShiftTimes_RB_SelectedEvents}"
                             IsChecked="{Binding ShiftFilter,
                                                 Converter={StaticResource EnumConverter},
                                                 ConverterParameter={x:Static dm:ShiftTimesFilter.SelectedEvents}}" />
            </UniformGrid>
        </HeaderedContentControl>
        <HeaderedContentControl Header="{x:Static i18n:ShiftTimes.ShiftTimes_Header_Times}">
            <UniformGrid Columns="3"
                         Rows="1"
                         ColumnSpacing="5">
                <RadioButton GroupName="Target"
                             Content="{x:Static i18n:ShiftTimes.ShiftTimes_RB_Start}"
                             IsChecked="{Binding ShiftTarget,
                                                 Converter={StaticResource EnumConverter},
                                                 ConverterParameter={x:Static dm:ShiftTimesTarget.Start}}" />
                <RadioButton GroupName="Target"
                             Content="{x:Static i18n:ShiftTimes.ShiftTimes_RB_End}"
                             IsChecked="{Binding ShiftTarget,
                                                 Converter={StaticResource EnumConverter},
                                                 ConverterParameter={x:Static dm:ShiftTimesTarget.End}}" />
                <RadioButton GroupName="Target"
                             Content="{x:Static i18n:ShiftTimes.ShiftTimes_RB_Both}"
                             IsChecked="{Binding ShiftTarget,
                                                 Converter={StaticResource EnumConverter},
                                                 ConverterParameter={x:Static dm:ShiftTimesTarget.Both}}" />
            </UniformGrid>
        </HeaderedContentControl>
        <Button Margin="2 5 2 2"
                Content="{x:Static i18n:ShiftTimes.ShiftTimes_Button_Ok}"
                Command="{Binding ConfirmCommand}"
                IsDefault="True"
                HorizontalAlignment="Right"
                Width="75"
                Classes="Primary" />
    </StackPanel>
    
    <Window.Styles>
        <Style Selector="HeaderedContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <StackPanel>
                                <ContentPresenter FontWeight="Bold"
                                                  Margin="0 10 0 2"
                                                  Content="{TemplateBinding Header}" />
                                <Border BorderBrush="{TemplateBinding Foreground, Converter={StaticResource BorderConverter}}"
                                        BorderThickness="2"
                                        CornerRadius="5">
                                    <ContentPresenter Content="{TemplateBinding Content}"
                                                      Padding="5" />
                                </Border>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Styles>
</Window>